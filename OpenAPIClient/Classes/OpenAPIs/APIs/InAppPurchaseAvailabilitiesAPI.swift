//
// InAppPurchaseAvailabilitiesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class InAppPurchaseAvailabilitiesAPI {

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated: String, CaseIterable {
        case currency = "currency"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated(id: String, fieldsTerritories: [FieldsTerritories_inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated]? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: TerritoriesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedWithRequestBuilder(id: id, fieldsTerritories: fieldsTerritories, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/inAppPurchaseAvailabilities/{id}/availableTerritories
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: RequestBuilder<TerritoriesResponse> 
     */
    open class func inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelatedWithRequestBuilder(id: String, fieldsTerritories: [FieldsTerritories_inAppPurchaseAvailabilitiesAvailableTerritoriesGetToManyRelated]? = nil, limit: Int? = nil) -> RequestBuilder<TerritoriesResponse> {
        var localVariablePath = "/v1/inAppPurchaseAvailabilities/{id}/availableTerritories"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[territories]": (wrappedValue: fieldsTerritories?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<TerritoriesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter inAppPurchaseAvailabilityCreateRequest: (body) InAppPurchaseAvailability representation 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func inAppPurchaseAvailabilitiesCreateInstance(inAppPurchaseAvailabilityCreateRequest: InAppPurchaseAvailabilityCreateRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InAppPurchaseAvailabilityResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return inAppPurchaseAvailabilitiesCreateInstanceWithRequestBuilder(inAppPurchaseAvailabilityCreateRequest: inAppPurchaseAvailabilityCreateRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - POST /v1/inAppPurchaseAvailabilities
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter inAppPurchaseAvailabilityCreateRequest: (body) InAppPurchaseAvailability representation 
     - returns: RequestBuilder<InAppPurchaseAvailabilityResponse> 
     */
    open class func inAppPurchaseAvailabilitiesCreateInstanceWithRequestBuilder(inAppPurchaseAvailabilityCreateRequest: InAppPurchaseAvailabilityCreateRequest) -> RequestBuilder<InAppPurchaseAvailabilityResponse> {
        let localVariablePath = "/v1/inAppPurchaseAvailabilities"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: inAppPurchaseAvailabilityCreateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseAvailabilityResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsInAppPurchaseAvailabilities
     */
    public enum FieldsInAppPurchaseAvailabilities_inAppPurchaseAvailabilitiesGetInstance: String, CaseIterable {
        case availableinnewterritories = "availableInNewTerritories"
        case availableterritories = "availableTerritories"
        case inapppurchase = "inAppPurchase"
    }

    /**
     * enum for parameter include
     */
    public enum Include_inAppPurchaseAvailabilitiesGetInstance: String, CaseIterable {
        case availableterritories = "availableTerritories"
    }

    /**
     * enum for parameter fieldsTerritories
     */
    public enum FieldsTerritories_inAppPurchaseAvailabilitiesGetInstance: String, CaseIterable {
        case currency = "currency"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseAvailabilities: (query) the fields to include for returned resources of type inAppPurchaseAvailabilities (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limitAvailableTerritories: (query) maximum number of related availableTerritories returned (when they are included) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func inAppPurchaseAvailabilitiesGetInstance(id: String, fieldsInAppPurchaseAvailabilities: [FieldsInAppPurchaseAvailabilities_inAppPurchaseAvailabilitiesGetInstance]? = nil, include: [Include_inAppPurchaseAvailabilitiesGetInstance]? = nil, fieldsTerritories: [FieldsTerritories_inAppPurchaseAvailabilitiesGetInstance]? = nil, limitAvailableTerritories: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: InAppPurchaseAvailabilityResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return inAppPurchaseAvailabilitiesGetInstanceWithRequestBuilder(id: id, fieldsInAppPurchaseAvailabilities: fieldsInAppPurchaseAvailabilities, include: include, fieldsTerritories: fieldsTerritories, limitAvailableTerritories: limitAvailableTerritories).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/inAppPurchaseAvailabilities/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsInAppPurchaseAvailabilities: (query) the fields to include for returned resources of type inAppPurchaseAvailabilities (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsTerritories: (query) the fields to include for returned resources of type territories (optional)
     - parameter limitAvailableTerritories: (query) maximum number of related availableTerritories returned (when they are included) (optional)
     - returns: RequestBuilder<InAppPurchaseAvailabilityResponse> 
     */
    open class func inAppPurchaseAvailabilitiesGetInstanceWithRequestBuilder(id: String, fieldsInAppPurchaseAvailabilities: [FieldsInAppPurchaseAvailabilities_inAppPurchaseAvailabilitiesGetInstance]? = nil, include: [Include_inAppPurchaseAvailabilitiesGetInstance]? = nil, fieldsTerritories: [FieldsTerritories_inAppPurchaseAvailabilitiesGetInstance]? = nil, limitAvailableTerritories: Int? = nil) -> RequestBuilder<InAppPurchaseAvailabilityResponse> {
        var localVariablePath = "/v1/inAppPurchaseAvailabilities/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[inAppPurchaseAvailabilities]": (wrappedValue: fieldsInAppPurchaseAvailabilities?.encodeToJSON(), isExplode: false),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
            "fields[territories]": (wrappedValue: fieldsTerritories?.encodeToJSON(), isExplode: false),
            "limit[availableTerritories]": (wrappedValue: limitAvailableTerritories?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<InAppPurchaseAvailabilityResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
