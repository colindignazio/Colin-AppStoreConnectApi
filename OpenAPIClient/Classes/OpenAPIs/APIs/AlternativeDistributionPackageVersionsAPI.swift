//
// AlternativeDistributionPackageVersionsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AlternativeDistributionPackageVersionsAPI {

    /**
     * enum for parameter fieldsAlternativeDistributionPackageDeltas
     */
    public enum FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsDeltasGetToManyRelated: String, CaseIterable {
        case alternativedistributionkeyblob = "alternativeDistributionKeyBlob"
        case filechecksum = "fileChecksum"
        case url = "url"
        case urlexpirationdate = "urlExpirationDate"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageDeltas: (query) the fields to include for returned resources of type alternativeDistributionPackageDeltas (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alternativeDistributionPackageVersionsDeltasGetToManyRelated(id: String, fieldsAlternativeDistributionPackageDeltas: [FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsDeltasGetToManyRelated]? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AlternativeDistributionPackageDeltasResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alternativeDistributionPackageVersionsDeltasGetToManyRelatedWithRequestBuilder(id: id, fieldsAlternativeDistributionPackageDeltas: fieldsAlternativeDistributionPackageDeltas, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/alternativeDistributionPackageVersions/{id}/deltas
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageDeltas: (query) the fields to include for returned resources of type alternativeDistributionPackageDeltas (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: RequestBuilder<AlternativeDistributionPackageDeltasResponse> 
     */
    open class func alternativeDistributionPackageVersionsDeltasGetToManyRelatedWithRequestBuilder(id: String, fieldsAlternativeDistributionPackageDeltas: [FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsDeltasGetToManyRelated]? = nil, limit: Int? = nil) -> RequestBuilder<AlternativeDistributionPackageDeltasResponse> {
        var localVariablePath = "/v1/alternativeDistributionPackageVersions/{id}/deltas"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[alternativeDistributionPackageDeltas]": (wrappedValue: fieldsAlternativeDistributionPackageDeltas?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AlternativeDistributionPackageDeltasResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAlternativeDistributionPackageVersions
     */
    public enum FieldsAlternativeDistributionPackageVersions_alternativeDistributionPackageVersionsGetInstance: String, CaseIterable {
        case alternativedistributionpackage = "alternativeDistributionPackage"
        case deltas = "deltas"
        case filechecksum = "fileChecksum"
        case state = "state"
        case url = "url"
        case urlexpirationdate = "urlExpirationDate"
        case variants = "variants"
        case version = "version"
    }

    /**
     * enum for parameter include
     */
    public enum Include_alternativeDistributionPackageVersionsGetInstance: String, CaseIterable {
        case alternativedistributionpackage = "alternativeDistributionPackage"
        case deltas = "deltas"
        case variants = "variants"
    }

    /**
     * enum for parameter fieldsAlternativeDistributionPackageVariants
     */
    public enum FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsGetInstance: String, CaseIterable {
        case alternativedistributionkeyblob = "alternativeDistributionKeyBlob"
        case filechecksum = "fileChecksum"
        case url = "url"
        case urlexpirationdate = "urlExpirationDate"
    }

    /**
     * enum for parameter fieldsAlternativeDistributionPackageDeltas
     */
    public enum FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsGetInstance: String, CaseIterable {
        case alternativedistributionkeyblob = "alternativeDistributionKeyBlob"
        case filechecksum = "fileChecksum"
        case url = "url"
        case urlexpirationdate = "urlExpirationDate"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageVersions: (query) the fields to include for returned resources of type alternativeDistributionPackageVersions (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAlternativeDistributionPackageVariants: (query) the fields to include for returned resources of type alternativeDistributionPackageVariants (optional)
     - parameter fieldsAlternativeDistributionPackageDeltas: (query) the fields to include for returned resources of type alternativeDistributionPackageDeltas (optional)
     - parameter limitDeltas: (query) maximum number of related deltas returned (when they are included) (optional)
     - parameter limitVariants: (query) maximum number of related variants returned (when they are included) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alternativeDistributionPackageVersionsGetInstance(id: String, fieldsAlternativeDistributionPackageVersions: [FieldsAlternativeDistributionPackageVersions_alternativeDistributionPackageVersionsGetInstance]? = nil, include: [Include_alternativeDistributionPackageVersionsGetInstance]? = nil, fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsGetInstance]? = nil, fieldsAlternativeDistributionPackageDeltas: [FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsGetInstance]? = nil, limitDeltas: Int? = nil, limitVariants: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AlternativeDistributionPackageVersionResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alternativeDistributionPackageVersionsGetInstanceWithRequestBuilder(id: id, fieldsAlternativeDistributionPackageVersions: fieldsAlternativeDistributionPackageVersions, include: include, fieldsAlternativeDistributionPackageVariants: fieldsAlternativeDistributionPackageVariants, fieldsAlternativeDistributionPackageDeltas: fieldsAlternativeDistributionPackageDeltas, limitDeltas: limitDeltas, limitVariants: limitVariants).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/alternativeDistributionPackageVersions/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageVersions: (query) the fields to include for returned resources of type alternativeDistributionPackageVersions (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter fieldsAlternativeDistributionPackageVariants: (query) the fields to include for returned resources of type alternativeDistributionPackageVariants (optional)
     - parameter fieldsAlternativeDistributionPackageDeltas: (query) the fields to include for returned resources of type alternativeDistributionPackageDeltas (optional)
     - parameter limitDeltas: (query) maximum number of related deltas returned (when they are included) (optional)
     - parameter limitVariants: (query) maximum number of related variants returned (when they are included) (optional)
     - returns: RequestBuilder<AlternativeDistributionPackageVersionResponse> 
     */
    open class func alternativeDistributionPackageVersionsGetInstanceWithRequestBuilder(id: String, fieldsAlternativeDistributionPackageVersions: [FieldsAlternativeDistributionPackageVersions_alternativeDistributionPackageVersionsGetInstance]? = nil, include: [Include_alternativeDistributionPackageVersionsGetInstance]? = nil, fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsGetInstance]? = nil, fieldsAlternativeDistributionPackageDeltas: [FieldsAlternativeDistributionPackageDeltas_alternativeDistributionPackageVersionsGetInstance]? = nil, limitDeltas: Int? = nil, limitVariants: Int? = nil) -> RequestBuilder<AlternativeDistributionPackageVersionResponse> {
        var localVariablePath = "/v1/alternativeDistributionPackageVersions/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[alternativeDistributionPackageVersions]": (wrappedValue: fieldsAlternativeDistributionPackageVersions?.encodeToJSON(), isExplode: false),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
            "fields[alternativeDistributionPackageVariants]": (wrappedValue: fieldsAlternativeDistributionPackageVariants?.encodeToJSON(), isExplode: false),
            "fields[alternativeDistributionPackageDeltas]": (wrappedValue: fieldsAlternativeDistributionPackageDeltas?.encodeToJSON(), isExplode: false),
            "limit[deltas]": (wrappedValue: limitDeltas?.encodeToJSON(), isExplode: true),
            "limit[variants]": (wrappedValue: limitVariants?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AlternativeDistributionPackageVersionResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAlternativeDistributionPackageVariants
     */
    public enum FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsVariantsGetToManyRelated: String, CaseIterable {
        case alternativedistributionkeyblob = "alternativeDistributionKeyBlob"
        case filechecksum = "fileChecksum"
        case url = "url"
        case urlexpirationdate = "urlExpirationDate"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageVariants: (query) the fields to include for returned resources of type alternativeDistributionPackageVariants (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func alternativeDistributionPackageVersionsVariantsGetToManyRelated(id: String, fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsVariantsGetToManyRelated]? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AlternativeDistributionPackageVariantsResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return alternativeDistributionPackageVersionsVariantsGetToManyRelatedWithRequestBuilder(id: id, fieldsAlternativeDistributionPackageVariants: fieldsAlternativeDistributionPackageVariants, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/alternativeDistributionPackageVersions/{id}/variants
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAlternativeDistributionPackageVariants: (query) the fields to include for returned resources of type alternativeDistributionPackageVariants (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: RequestBuilder<AlternativeDistributionPackageVariantsResponse> 
     */
    open class func alternativeDistributionPackageVersionsVariantsGetToManyRelatedWithRequestBuilder(id: String, fieldsAlternativeDistributionPackageVariants: [FieldsAlternativeDistributionPackageVariants_alternativeDistributionPackageVersionsVariantsGetToManyRelated]? = nil, limit: Int? = nil) -> RequestBuilder<AlternativeDistributionPackageVariantsResponse> {
        var localVariablePath = "/v1/alternativeDistributionPackageVersions/{id}/variants"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[alternativeDistributionPackageVariants]": (wrappedValue: fieldsAlternativeDistributionPackageVariants?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AlternativeDistributionPackageVariantsResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
