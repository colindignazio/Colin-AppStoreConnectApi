//
// AppCategoriesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class AppCategoriesAPI {

    /**
     * enum for parameter filterPlatforms
     */
    public enum FilterPlatforms_appCategoriesGetCollection: String, CaseIterable {
        case ios = "IOS"
        case macOs = "MAC_OS"
        case tvOs = "TV_OS"
        case visionOs = "VISION_OS"
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesGetCollection: String, CaseIterable {
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appCategoriesGetCollection: String, CaseIterable {
        case parent = "parent"
        case subcategories = "subcategories"
    }

    /**

     - parameter filterPlatforms: (query) filter by attribute &#39;platforms&#39; (optional)
     - parameter existsParent: (query) filter by existence or non-existence of related &#39;parent&#39; (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func appCategoriesGetCollection(filterPlatforms: [FilterPlatforms_appCategoriesGetCollection]? = nil, existsParent: Bool? = nil, fieldsAppCategories: [FieldsAppCategories_appCategoriesGetCollection]? = nil, limit: Int? = nil, include: [Include_appCategoriesGetCollection]? = nil, limitSubcategories: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AppCategoriesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return appCategoriesGetCollectionWithRequestBuilder(filterPlatforms: filterPlatforms, existsParent: existsParent, fieldsAppCategories: fieldsAppCategories, limit: limit, include: include, limitSubcategories: limitSubcategories).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/appCategories
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter filterPlatforms: (query) filter by attribute &#39;platforms&#39; (optional)
     - parameter existsParent: (query) filter by existence or non-existence of related &#39;parent&#39; (optional)
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - returns: RequestBuilder<AppCategoriesResponse> 
     */
    open class func appCategoriesGetCollectionWithRequestBuilder(filterPlatforms: [FilterPlatforms_appCategoriesGetCollection]? = nil, existsParent: Bool? = nil, fieldsAppCategories: [FieldsAppCategories_appCategoriesGetCollection]? = nil, limit: Int? = nil, include: [Include_appCategoriesGetCollection]? = nil, limitSubcategories: Int? = nil) -> RequestBuilder<AppCategoriesResponse> {
        let localVariablePath = "/v1/appCategories"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter[platforms]": (wrappedValue: filterPlatforms?.encodeToJSON(), isExplode: false),
            "exists[parent]": (wrappedValue: existsParent?.encodeToJSON(), isExplode: false),
            "fields[appCategories]": (wrappedValue: fieldsAppCategories?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
            "limit[subcategories]": (wrappedValue: limitSubcategories?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppCategoriesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesGetInstance: String, CaseIterable {
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**
     * enum for parameter include
     */
    public enum Include_appCategoriesGetInstance: String, CaseIterable {
        case parent = "parent"
        case subcategories = "subcategories"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func appCategoriesGetInstance(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesGetInstance]? = nil, include: [Include_appCategoriesGetInstance]? = nil, limitSubcategories: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AppCategoryResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return appCategoriesGetInstanceWithRequestBuilder(id: id, fieldsAppCategories: fieldsAppCategories, include: include, limitSubcategories: limitSubcategories).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/appCategories/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter include: (query) comma-separated list of relationships to include (optional)
     - parameter limitSubcategories: (query) maximum number of related subcategories returned (when they are included) (optional)
     - returns: RequestBuilder<AppCategoryResponse> 
     */
    open class func appCategoriesGetInstanceWithRequestBuilder(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesGetInstance]? = nil, include: [Include_appCategoriesGetInstance]? = nil, limitSubcategories: Int? = nil) -> RequestBuilder<AppCategoryResponse> {
        var localVariablePath = "/v1/appCategories/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[appCategories]": (wrappedValue: fieldsAppCategories?.encodeToJSON(), isExplode: false),
            "include": (wrappedValue: include?.encodeToJSON(), isExplode: false),
            "limit[subcategories]": (wrappedValue: limitSubcategories?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppCategoryResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesParentGetToOneRelated: String, CaseIterable {
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func appCategoriesParentGetToOneRelated(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesParentGetToOneRelated]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AppCategoryWithoutIncludesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return appCategoriesParentGetToOneRelatedWithRequestBuilder(id: id, fieldsAppCategories: fieldsAppCategories).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/appCategories/{id}/parent
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - returns: RequestBuilder<AppCategoryWithoutIncludesResponse> 
     */
    open class func appCategoriesParentGetToOneRelatedWithRequestBuilder(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesParentGetToOneRelated]? = nil) -> RequestBuilder<AppCategoryWithoutIncludesResponse> {
        var localVariablePath = "/v1/appCategories/{id}/parent"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[appCategories]": (wrappedValue: fieldsAppCategories?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppCategoryWithoutIncludesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**
     * enum for parameter fieldsAppCategories
     */
    public enum FieldsAppCategories_appCategoriesSubcategoriesGetToManyRelated: String, CaseIterable {
        case parent = "parent"
        case platforms = "platforms"
        case subcategories = "subcategories"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func appCategoriesSubcategoriesGetToManyRelated(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesSubcategoriesGetToManyRelated]? = nil, limit: Int? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: AppCategoriesWithoutIncludesResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return appCategoriesSubcategoriesGetToManyRelatedWithRequestBuilder(id: id, fieldsAppCategories: fieldsAppCategories, limit: limit).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/appCategories/{id}/subcategories
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsAppCategories: (query) the fields to include for returned resources of type appCategories (optional)
     - parameter limit: (query) maximum resources per page (optional)
     - returns: RequestBuilder<AppCategoriesWithoutIncludesResponse> 
     */
    open class func appCategoriesSubcategoriesGetToManyRelatedWithRequestBuilder(id: String, fieldsAppCategories: [FieldsAppCategories_appCategoriesSubcategoriesGetToManyRelated]? = nil, limit: Int? = nil) -> RequestBuilder<AppCategoriesWithoutIncludesResponse> {
        var localVariablePath = "/v1/appCategories/{id}/subcategories"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[appCategories]": (wrappedValue: fieldsAppCategories?.encodeToJSON(), isExplode: false),
            "limit": (wrappedValue: limit?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<AppCategoriesWithoutIncludesResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
