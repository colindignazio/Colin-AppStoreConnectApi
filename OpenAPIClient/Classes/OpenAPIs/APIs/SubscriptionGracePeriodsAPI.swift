//
// SubscriptionGracePeriodsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class SubscriptionGracePeriodsAPI {

    /**
     * enum for parameter fieldsSubscriptionGracePeriods
     */
    public enum FieldsSubscriptionGracePeriods_subscriptionGracePeriodsGetInstance: String, CaseIterable {
        case duration = "duration"
        case optin = "optIn"
        case renewaltype = "renewalType"
        case sandboxoptin = "sandboxOptIn"
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionGracePeriods: (query) the fields to include for returned resources of type subscriptionGracePeriods (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func subscriptionGracePeriodsGetInstance(id: String, fieldsSubscriptionGracePeriods: [FieldsSubscriptionGracePeriods_subscriptionGracePeriodsGetInstance]? = nil, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SubscriptionGracePeriodResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return subscriptionGracePeriodsGetInstanceWithRequestBuilder(id: id, fieldsSubscriptionGracePeriods: fieldsSubscriptionGracePeriods).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/subscriptionGracePeriods/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter fieldsSubscriptionGracePeriods: (query) the fields to include for returned resources of type subscriptionGracePeriods (optional)
     - returns: RequestBuilder<SubscriptionGracePeriodResponse> 
     */
    open class func subscriptionGracePeriodsGetInstanceWithRequestBuilder(id: String, fieldsSubscriptionGracePeriods: [FieldsSubscriptionGracePeriods_subscriptionGracePeriodsGetInstance]? = nil) -> RequestBuilder<SubscriptionGracePeriodResponse> {
        var localVariablePath = "/v1/subscriptionGracePeriods/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "fields[subscriptionGracePeriods]": (wrappedValue: fieldsSubscriptionGracePeriods?.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SubscriptionGracePeriodResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }

    /**

     - parameter id: (path) the id of the requested resource 
     - parameter subscriptionGracePeriodUpdateRequest: (body) SubscriptionGracePeriod representation 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func subscriptionGracePeriodsUpdateInstance(id: String, subscriptionGracePeriodUpdateRequest: SubscriptionGracePeriodUpdateRequest, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: SubscriptionGracePeriodResponse?, _ error: Error?) -> Void)) -> RequestTask {
        return subscriptionGracePeriodsUpdateInstanceWithRequestBuilder(id: id, subscriptionGracePeriodUpdateRequest: subscriptionGracePeriodUpdateRequest).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - PATCH /v1/subscriptionGracePeriods/{id}
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter id: (path) the id of the requested resource 
     - parameter subscriptionGracePeriodUpdateRequest: (body) SubscriptionGracePeriod representation 
     - returns: RequestBuilder<SubscriptionGracePeriodResponse> 
     */
    open class func subscriptionGracePeriodsUpdateInstanceWithRequestBuilder(id: String, subscriptionGracePeriodUpdateRequest: SubscriptionGracePeriodUpdateRequest) -> RequestBuilder<SubscriptionGracePeriodResponse> {
        var localVariablePath = "/v1/subscriptionGracePeriods/{id}"
        let idPreEscape = "\(APIHelper.mapValueToPathItem(id))"
        let idPostEscape = idPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{id}", with: idPostEscape, options: .literal, range: nil)
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: subscriptionGracePeriodUpdateRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<SubscriptionGracePeriodResponse>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "PATCH", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
