//
// FinanceReportsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class FinanceReportsAPI {

    /**
     * enum for parameter filterReportType
     */
    public enum FilterReportType_financeReportsGetCollection: String, CaseIterable {
        case financial = "FINANCIAL"
        case financeDetail = "FINANCE_DETAIL"
    }

    /**

     - parameter filterRegionCode: (query) filter by attribute &#39;regionCode&#39; 
     - parameter filterReportDate: (query) filter by attribute &#39;reportDate&#39; 
     - parameter filterReportType: (query) filter by attribute &#39;reportType&#39; 
     - parameter filterVendorNumber: (query) filter by attribute &#39;vendorNumber&#39; 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    @discardableResult
    open class func financeReportsGetCollection(filterRegionCode: [String], filterReportDate: [String], filterReportType: [FilterReportType_financeReportsGetCollection], filterVendorNumber: [String], apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: URL?, _ error: Error?) -> Void)) -> RequestTask {
        return financeReportsGetCollectionWithRequestBuilder(filterRegionCode: filterRegionCode, filterReportDate: filterReportDate, filterReportType: filterReportType, filterVendorNumber: filterVendorNumber).execute(apiResponseQueue) { result in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     - GET /v1/financeReports
     - Bearer Token:
       - type: http
       - name: itc-bearer-token
     - parameter filterRegionCode: (query) filter by attribute &#39;regionCode&#39; 
     - parameter filterReportDate: (query) filter by attribute &#39;reportDate&#39; 
     - parameter filterReportType: (query) filter by attribute &#39;reportType&#39; 
     - parameter filterVendorNumber: (query) filter by attribute &#39;vendorNumber&#39; 
     - returns: RequestBuilder<URL> 
     */
    open class func financeReportsGetCollectionWithRequestBuilder(filterRegionCode: [String], filterReportDate: [String], filterReportType: [FilterReportType_financeReportsGetCollection], filterVendorNumber: [String]) -> RequestBuilder<URL> {
        let localVariablePath = "/v1/financeReports"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "filter[regionCode]": (wrappedValue: filterRegionCode.encodeToJSON(), isExplode: false),
            "filter[reportDate]": (wrappedValue: filterReportDate.encodeToJSON(), isExplode: false),
            "filter[reportType]": (wrappedValue: filterReportType.encodeToJSON(), isExplode: false),
            "filter[vendorNumber]": (wrappedValue: filterVendorNumber.encodeToJSON(), isExplode: false),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<URL>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: true)
    }
}
